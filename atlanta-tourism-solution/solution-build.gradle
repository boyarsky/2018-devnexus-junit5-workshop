// gradle file based on sample https://github.com/junit-team/junit5-samples/blob/r5.0.3/junit5-gradle-consumer/build.gradle

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3'
	}
}

repositories {
	mavenCentral()
}

ext.junitVintageVersion  = '4.12.3'
ext.junitPlatformVersion = '1.0.3'
ext.junitJupiterVersion  = '5.0.3'
ext.log4jVersion         = '2.9.0'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'

compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	options.compilerArgs += '-parameters'
}

junitPlatform {
	// platformVersion '1.0.3'
	filters {
		engines {
			// include 'junit-jupiter', 'junit-vintage'
			// exclude 'custom-engine'
		}
		tags {
			// include 'fast'
			exclude 'slow'
		}
		// includeClassNamePattern '.*Test'
	}
	// configurationParameter 'junit.jupiter.conditions.deactivate', '*'
	// enableStandardTestTask true
	// reportsDir file('build/test-results/junit-platform') // this is the default
}

dependencies {
  	testCompile 'org.hamcrest:hamcrest-all:1.3'
   	testCompile 'org.mockito:mockito-core:2.9.0'

	testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
	testCompile("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")
	testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
	// to make Eclipse and IntelliJ happy
	testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
	
	testCompile("name.falgout.jeffrey.testing.junit5:mockito-extension:1.0.0-RC2")
	
	// To avoid compiler warnings about @API annotations in JUnit code
	testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
}
test {
   afterSuite { desc, result ->
    	     if (!desc.parent)
        		println("${result.resultType} " +
            "(${result.testCount} tests, " +
            "${result.successfulTestCount} successes, " +
            "${result.failedTestCount} failures, " +
            "${result.skippedTestCount} skipped)")
   }
}